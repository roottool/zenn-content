{
  "name": "Zenn content",
  "build": {
    "dockerfile": "Dockerfile",
    "args": {
      "VARIANT": "16-bullseye",
      "USERNAME": "node",
      "USER_UID": "1000"
    }
  },
  "overrideCommand": false,
  "runArgs": [
    "--name=zenn_content",
  ],
  "mounts": [
    "source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind",
    "source=zenn_content-zsh_history,target=/home/node/commandhistory,type=volume",
    "source=zenn_content-node_modules,target=${containerWorkspaceFolder}/node_modules,type=volume",
    "source=zenn_content-vscode_extensions,target=/home/node/.vscode-server/extensions,type=volume",
  ],
  "settings": {
    "terminal.integrated.defaultProfile.linux": "zsh",
    // * For Linter and Formatter
    "editor.codeActionsOnSave": [
      "source.fixAll.eslint",
      "source.addMissingImports",
    ],
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.formatOnSaveMode": "modifications",
    "editor.tabSize": 2,
    "eslint.packageManager": "yarn",
    "files.trimFinalNewlines": true,
    "files.trimTrailingWhitespace": true,
    "json.format.enable": false,
    "[markdown]": {
      "files.trimTrailingWhitespace": false,
      "editor.wordWrap": "on",
      "editor.quickSuggestions": false
    }
  },
  // * Add the IDs of extensions you want installed when the container is created.
  "extensions": [
    // * Docker
    "ms-azuretools.vscode-docker",
    // * EditorConfig
    "editorconfig.editorconfig",
    // * JavaScript, TypeScript
    "dbaeumer.vscode-eslint",
    "esbenp.prettier-vscode",
    // * Markdown
    "taichi.vscode-textlint",
  ],
  // * Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [],
  // * Use 'postCreateCommand' to run commands after the container is created.
  "postCreateCommand": "sudo chown -R node:node node_modules",
  // * Uncomment to connect as a non-root user.
  // * See https://aka.ms/vscode-remote/containers/non-root.
  "remoteUser": "node",
}
